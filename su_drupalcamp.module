<?php
/**
 * @file
 * Code for the Stanford DrupalCamp module.
 */

/**
 * Implements template_preprocess_html().
 */
function su_drupalcamp_preprocess_html(&$variables){
  global $user;
  if ((!in_array('administrator', $user->roles)) && (preg_match('/^Create Session/', $variables['head_title']) > 0)) {
    $title_string = t("Submit Session Proposal | Stanford Drupal Camp");
    $variables['head_title'] = $title_string;
  }
}

/**
 * Implements template_preprocess_page().
 */
function su_drupalcamp_preprocess_page(&$variables){
  global $user;
  if ((!in_array('administrator', $user->roles)) && ($variables['page']['content']['system_main']['type']['#value'] == 'session')) {
    drupal_set_title(t('Submit Session Proposal'));
  }
}

/**
 * Implements hook_form_alter().
 */
function su_drupalcamp_form_session_node_form_alter(&$form, &$form_state, $form_id) {

  global $user;
  $is_admin = user_access('administer site configuration');
  $is_logged_in = user_is_logged_in();

  // Hide group ref from everyone
  // This field is required by OG and is stored in a feature so we need to do
  // some fun hacky time stuff. Don't try this at home.
  if (isset($form['og_group_ref'])) {
    // $form['og_group_ref']['#attributes']['class'][] = 'visually-hidden';
    // $form['#valdiate'][] = "su_drupalcamp_form_session_node_form_alter_validate";
    unset($form['og_group_ref']);
    foreach ($form['#validate'] as $k => $callback) {
      if ($callback == "og_form_group_reference_validate") {
        unset($form['#validate'][$k]);
      }
    }
  }

}

/**
 * Implements hook_node_access().
 */
function su_drupalcamp_node_access($node, $op, $account) {
  $type = is_string($node) ? $node : $node->type;
  $is_logged_in = user_is_logged_in();

   // Ensure that session nodes are not anon created even if OG says its ok.
   // see: og_node_access for their overrides.
   if ($type == 'session' && !$is_logged_in) {
     if ($op == 'create') {
       return NODE_ACCESS_DENY;
     }
   }

  // Returning nothing from this function would have the same effect.
  return NODE_ACCESS_IGNORE;
}
